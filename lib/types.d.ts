export declare type IDeepPartial<T> = T extends object ? {
    [P in keyof T]?: IDeepPartial<T[P]>;
} : T;
export declare type IBaseSize = '8xs' | '7xs' | '6xs' | '5xs' | '4xs' | '3xs' | 'xxs' | 'xs' | 's' | 'm' | 'l' | 'xl' | 'xxl' | '3xl' | '4xl' | '5xl' | '6xl' | '7xl' | '8xl';
export interface IBaseSizeNumber {
    '8xs': number;
    '7xs': number;
    '6xs': number;
    '5xs': number;
    '4xs': number;
    '3xs': number;
    xxs: number;
    xs: number;
    s: number;
    m: number;
    l: number;
    xl: number;
    xxl: number;
    '3xl': number;
    '4xl': number;
    '5xl': number;
    '6xl': number;
    '7xl': number;
    '8xl': number;
}
export declare type ISizeType = 'px' | 'rem';
export declare type IAlignItems = 'baseline' | 'center' | 'flex-end' | 'flex-start' | 'stretch';
export declare type IAlignSelf = 'auto' | 'baseline' | 'center' | 'flex-end' | 'flex-start' | 'stretch';
export declare type IFlexDirection = 'column' | 'column-reverse' | 'row' | 'row-reverse';
export declare type IJustifyContent = 'center' | 'flex-end' | 'flex-start' | 'space-around' | 'space-between' | 'space-evenly';
export declare type ITextAlign = 'center' | 'end' | 'justify' | 'justify-all' | 'left' | 'match-parent' | 'right' | 'start';
export declare type IWordBreak = 'break-all' | 'break-word' | 'keep-all' | 'normal';
export declare type IBaseFlexElement = 'article' | 'aside' | 'div' | 'figure' | 'footer' | 'header' | 'main' | 'nav' | 'section' | 'summary';
export declare type IBorderRadius = IBaseSize;
export declare type IBorderWidth = IBaseSize;
export declare type IColor = 'inherit' | 'primary' | 'secondary' | 'tertiary' | 'quaternary' | 'quinary' | 'senary' | 'warning' | 'error' | 'header' | 'footer' | 'modal' | 'primaryText' | 'secondaryText' | 'tertiaryText' | 'quaternaryText' | 'quinaryText' | 'senaryText' | 'warningText' | 'errorText' | 'headerText' | 'footerText' | 'modalText' | 'primaryBackground' | 'secondaryBackground' | 'tertiaryBackground' | 'quaternaryBackground' | 'quinaryBackground' | 'senaryBackground' | 'warningBackground' | 'errorBackground' | 'headerBackground' | 'footerBackground' | 'modalBackground' | 'onPrimary' | 'onSecondary' | 'onTertiary' | 'onQuaternary' | 'onQuinary' | 'onSenary' | 'onWarning' | 'onError' | 'onHeader' | 'onFooter' | 'onModal' | 'primaryBorder' | 'secondaryBorder' | 'tertiaryBorder' | 'quaternaryBorder' | 'senaryBorder' | 'warningBorder' | 'errorBorder' | 'headerBorder' | 'footerBorder' | 'modalBorder';
export declare type IDistance = IBaseSize;
export declare type IFlipDirection = 'flip' | 'flip-reverse' | 'reverse';
export declare type IFlipThreshold = IBaseSize;
export declare type IFontSize = IBaseSize;
export declare type IFontStyle = 'italic' | 'normal';
export declare type IFontWeight = 'bold' | 'normal' | 'semibold';
export declare type IHeight = IBaseSize;
export declare type IStyleElement = 'b' | 'cite' | 'code' | 'em' | 'i' | 'kbd' | 'mark' | 's' | 'samp' | 'small' | 'span' | 'strong' | 'sub' | 'sup' | 'u' | 'var';
export declare type ITextElement = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'p';
export declare type IWidth = IBaseSize;
export interface IEasyFlexTheme {
    border: {
        radius: IBaseSizeNumber;
        width: IBaseSizeNumber;
    };
    color: {
        primary: string;
        secondary: string;
        tertiary: string;
        quaternary: string;
        quinary: string;
        senary: string;
        warning: string;
        error: string;
        header: string;
        footer: string;
        modal: string;
        primaryText: string;
        secondaryText: string;
        tertiaryText: string;
        quaternaryText: string;
        quinaryText: string;
        senaryText: string;
        warningText: string;
        errorText: string;
        headerText: string;
        footerText: string;
        modalText: string;
        primaryBackground: string;
        secondaryBackground: string;
        tertiaryBackground: string;
        quaternaryBackground: string;
        quinaryBackground: string;
        senaryBackground: string;
        warningBackground: string;
        errorBackground: string;
        headerBackground: string;
        footerBackground: string;
        modalBackground: string;
        onPrimary: string;
        onSecondary: string;
        onTertiary: string;
        onQuaternary: string;
        onQuinary: string;
        onSenary: string;
        onWarning: string;
        onError: string;
        onHeader: string;
        onFooter: string;
        onModal: string;
        primaryBorder: string;
        secondaryBorder: string;
        tertiaryBorder: string;
        quaternaryBorder: string;
        quinaryBorder: string;
        senaryBorder: string;
        warningBorder: string;
        errorBorder: string;
        headerBorder: string;
        footerBorder: string;
        modalBorder: string;
    };
    distance: IBaseSizeNumber;
    flip: {
        fallbackThreshold: number;
        threshold: IBaseSizeNumber;
    };
    font: {
        sizeType: ISizeType;
        size: IBaseSizeNumber;
        weight: {
            normal: number | string;
            semibold: number | string;
            bold: number | string;
        };
    };
    modal: {
        backgroundColor: string;
        blur: number;
    };
    size: {
        height: IBaseSizeNumber;
        width: IBaseSizeNumber;
    };
}
export declare type IPartialEasyFlexTheme = IDeepPartial<IEasyFlexTheme>;
